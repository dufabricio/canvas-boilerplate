{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rxjs/Observable.js","webpack:///./node_modules/rxjs/Observer.js","webpack:///./node_modules/rxjs/Subscriber.js","webpack:///./node_modules/rxjs/Subscription.js","webpack:///./node_modules/rxjs/observable/ArrayObservable.js","webpack:///./node_modules/rxjs/observable/EmptyObservable.js","webpack:///./node_modules/rxjs/observable/ScalarObservable.js","webpack:///./node_modules/rxjs/observable/of.js","webpack:///./node_modules/rxjs/symbol/observable.js","webpack:///./node_modules/rxjs/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/util/errorObject.js","webpack:///./node_modules/rxjs/util/isArray.js","webpack:///./node_modules/rxjs/util/isFunction.js","webpack:///./node_modules/rxjs/util/isObject.js","webpack:///./node_modules/rxjs/util/isScheduler.js","webpack:///./node_modules/rxjs/util/noop.js","webpack:///./node_modules/rxjs/util/pipe.js","webpack:///./node_modules/rxjs/util/root.js","webpack:///./node_modules/rxjs/util/toSubscriber.js","webpack:///./node_modules/rxjs/util/tryCatch.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/js/canvas.js","webpack:///./src/js/sample1.js","webpack:///./src/js/sample2.js","webpack:///./src/js/utils.js"],"names":["loadSample","sampleName","samples","document","querySelectorAll","forEach","sample","getAttribute","style","display","menuItem","addEventListener","event","sample1","canvas","querySelector","Sprite","x","y","radius","color","getDistance","obj1","obj2","xDistance","yDistance","Math","sqrt","pow","init","circle1","width","height","circle2","animate","requestAnimationFrame","c","clearRect","status","innerHTML","mouse","update","getContext","innerWidth","innerHeight","clientX","clientY","prototype","draw","beginPath","arc","PI","fillStyle","fill","closePath","getElementById","sample2","randomColor","colors","floor","random","length","Particle","velocity","x1","y1","x2","y2","particles","i","j","push","particle","stageLeft","stageRight","stageTop","stageBottom","randomIntFromRange","min","max","distance","xDist","yDist","module","exports"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;AACb,aAAa,mBAAO,CAAC,qDAAa;AAClC,qBAAqB,mBAAO,CAAC,qEAAqB;AAClD,mBAAmB,mBAAO,CAAC,qEAAqB;AAChD,aAAa,mBAAO,CAAC,qDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA,uFAAuF,gBAAgB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,eAAe,SAAS;AACxB;AACA,eAAe,SAAS;AACxB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,mBAAmB;AAClC,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;AChTa;AACb;AACA;AACA,4BAA4B,EAAE;AAC9B,2BAA2B,WAAW,EAAE;AACxC,2BAA2B;AAC3B;AACA,oC;;;;;;;;;;;;ACPa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,mBAAmB,mBAAO,CAAC,iEAAmB;AAC9C,qBAAqB,mBAAO,CAAC,2DAAgB;AAC7C,iBAAiB,mBAAO,CAAC,mDAAY;AACrC,qBAAqB,mBAAO,CAAC,yEAAuB;AACpD;AACA,mBAAmB,eAAe;AAClC,IAAI,mBAAmB,mBAAmB,eAAe;AACzD,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClF;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,yCAAyC,YAAY;AACrD;AACA,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,sC;;;;;;;;;;;;AC9Qa;AACb,gBAAgB,mBAAO,CAAC,2DAAgB;AACxC,iBAAiB,mBAAO,CAAC,6DAAiB;AAC1C,mBAAmB,mBAAO,CAAC,iEAAmB;AAC9C,iBAAiB,mBAAO,CAAC,6DAAiB;AAC1C,oBAAoB,mBAAO,CAAC,mEAAoB;AAChD,4BAA4B,mBAAO,CAAC,mFAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,+CAA+C,mGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;;;;;;AChMa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,mBAAmB,mBAAO,CAAC,wDAAe;AAC1C,yBAAyB,mBAAO,CAAC,8EAAoB;AACrD,wBAAwB,mBAAO,CAAC,4EAAmB;AACnD,oBAAoB,mBAAO,CAAC,oEAAqB;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,KAAK;AACpB,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;ACzHa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,mBAAmB,mBAAO,CAAC,wDAAe;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yBAAyB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;AChFa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,mBAAmB,mBAAO,CAAC,wDAAe;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,4C;;;;;;;;;;;;ACzDa;AACb,wBAAwB,mBAAO,CAAC,4EAAmB;AACnD;AACA,8B;;;;;;;;;;;;ACHa;AACb,aAAa,mBAAO,CAAC,sDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACzBa;AACb,aAAa,mBAAO,CAAC,sDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACTa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,0CAA0C,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;ACxBa;AACb;AACA,uBAAuB,MAAM;AAC7B,uC;;;;;;;;;;;;ACHa;AACb,kDAAkD,0CAA0C,EAAE;AAC9F,mC;;;;;;;;;;;;ACFa;AACb;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACLa;AACb;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACLa;AACb;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;ACLa;AACb;AACA,iBAAiB;AACjB;AACA,gC;;;;;;;;;;;;ACJa;AACb,aAAa,mBAAO,CAAC,gDAAQ;AAC7B;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;AACA;AACA,gC;;;;;;;;;;;;ACxBA,8CAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]);\n}\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import Sample1 from './sample1.js'\r\nimport Sample2 from './sample2.js'\r\n\r\nlet loadSample = (sampleName) => { \r\n    let samples = document.querySelectorAll('canvas');\r\n    samples.forEach((sample)=>{\r\n        if(sample.getAttribute('class') === sampleName){\r\n            sample.style.display = 'block';\r\n        }else{\r\n            sample.style.display = 'none';\r\n        }\r\n    });\r\n}\r\n\r\ndocument.querySelectorAll('ul.menu li').forEach((menuItem)=>{\r\n    menuItem.addEventListener(\"click\",(event)=>{\r\n        loadSample(menuItem.getAttribute(\"class\"));\r\n    });\r\n});\r\n   ","import utils from './utils'\r\n\r\nlet sample1 = () => {\r\n    let canvas = document.querySelector('canvas.sample1')\r\n    if(canvas){\r\n\r\n        const c = canvas.getContext('2d')\r\n\r\n        canvas.width = innerWidth\r\n        canvas.height = innerHeight\r\n\r\n        const mouse = {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n\r\n        // Event Listeners\r\n        addEventListener('mousemove', event => {\r\n            mouse.x = event.clientX\r\n            mouse.y = event.clientY\r\n        })\r\n\r\n        addEventListener('resize', () => {\r\n            canvas.width = innerWidth\r\n            canvas.height = innerHeight\r\n\r\n            init()\r\n        })\r\n\r\n        // Objects\r\n        function Sprite(x, y, radius, color) {\r\n            this.x = x\r\n            this.y = y\r\n            this.radius = radius\r\n            this.color = color\r\n        }\r\n\r\n        Sprite.prototype.draw = function() {\r\n            c.beginPath()\r\n            c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n            c.fillStyle = this.color\r\n            c.fill()\r\n            c.closePath()\r\n        }\r\n\r\n        Sprite.prototype.update = function() {\r\n            this.draw()\r\n        }\r\n\r\n        // Collision Detect\r\n        function getDistance(obj1,obj2){\r\n            let xDistance = obj2.x - obj1.x;\r\n            let yDistance = obj2.y - obj1.y;\r\n            return Math.sqrt(Math.pow(xDistance,2) + Math.pow(yDistance, 2));\r\n        }\r\n\r\n        // Implementation\r\n        let circle1;\r\n        let circle2;\r\n\r\n        function init() {\r\n            circle1 = new Sprite(canvas.width/2,canvas.height/2,50,'black');\r\n            circle2 = new Sprite(10,10,50,'red');\r\n        }\r\n\r\n\r\n        let status = document.getElementById(\"status\");\r\n\r\n        // Animation Loop\r\n        function animate() {\r\n\r\n            requestAnimationFrame(animate)\r\n            c.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            if(canvas.style.display == 'block'){\r\n                \r\n                if(getDistance(circle1, circle2) < circle1.radius + circle2.radius){\r\n                    circle1.color = 'red';\r\n                    status.innerHTML = \"Collision Detected !\"\r\n                }else{\r\n                    circle1.color = 'black';\r\n                    status.innerHTML = \"\"\r\n                }\r\n\r\n                circle2.x = mouse.x;\r\n                circle2.y = mouse.y;\r\n\r\n                circle1.update();\r\n                circle2.update();\r\n            }\r\n        }\r\n\r\n        init()\r\n        animate()\r\n    }\r\n}\r\nsample1();\r\n","import utils from './utils'\r\nimport { of } from 'rxjs/observable/of'\r\n\r\nlet sample2 = () => {\r\n    let canvas = document.querySelector('canvas.sample2')\r\n    if(canvas){\r\n\r\n        const c = canvas.getContext('2d')\r\n\r\n        canvas.width = innerWidth\r\n        canvas.height = innerHeight\r\n\r\n        const mouse = {\r\n            x: 10,\r\n            y: 10\r\n        }\r\n\r\n        const colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\r\n        function randomColor() {\r\n            return colors[Math.floor(Math.random() * colors.length)];\r\n        }\r\n        // Event Listeners\r\n        addEventListener('mousemove', event => {\r\n            mouse.x = event.clientX\r\n            mouse.y = event.clientY\r\n        })\r\n\r\n        addEventListener('resize', () => {\r\n            canvas.width = innerWidth\r\n            canvas.height = innerHeight\r\n\r\n            init()\r\n        })\r\n\r\n        // Objects\r\n        function Particle(x, y, radius, color) {\r\n            this.x = x\r\n            this.y = y\r\n            this.radius = radius\r\n            this.color = color\r\n            this.velocity = {\r\n                x: Math.random() - 0.5,\r\n                y: Math.random() - 0.5\r\n            }\r\n        }\r\n\r\n        Particle.prototype.draw = function() {\r\n            c.beginPath()\r\n            c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\r\n            c.fillStyle = this.color\r\n            c.fill()\r\n            c.closePath()\r\n        }\r\n\r\n        Particle.prototype.update = function(particles) {\r\n\r\n            this.draw();\r\n\r\n            for(let i = 0; i < particles.length; i++){\r\n                if(this === particles[i]){ continue }\r\n\r\n                if(getDistance(this.x, this.y, particles[i].x, particles[i].y) - this.radius * 2 < 0){\r\n                    this.velocity.x = this.velocity.x * (-1);\r\n                    this.velocity.y = this.velocity.y * (-1);\r\n                }\r\n\r\n                let stageLeft = radius*2; \r\n                let stageRight = innerWidth-radius*2\r\n                let stageTop = radius*2; \r\n                let stageBottom = innerHeight-radius*2\r\n\r\n                if(this.x < stageLeft){\r\n                    this.x = stageLeft\r\n                    this.velocity.x = this.velocity.x * (-1);\r\n                }\r\n\r\n                if(this.x > stageRight){\r\n                    this.x = stageRight;\r\n                    this.velocity.x = this.velocity.x * (-1);\r\n                }\r\n\r\n                if(this.y < stageTop){\r\n                    this.y = stageTop\r\n                    this.velocity.y = this.velocity.y * (-1);\r\n                }\r\n\r\n                if(this.y > stageBottom){\r\n                    this.y = stageBottom;\r\n                    this.velocity.y = this.velocity.y * (-1);\r\n                }\r\n            }\r\n\r\n            this.x += this.velocity.x;\r\n            this.y += this.velocity.y;\r\n\r\n            \r\n        }\r\n\r\n        // Collision Detect\r\n        function getDistance(x1,y1,x2,y2){\r\n            let xDistance = x1 - x2;\r\n            let yDistance = y1 - y2;\r\n            return Math.sqrt(Math.pow(xDistance,2) + Math.pow(yDistance, 2));\r\n        }\r\n\r\n        // Implementation\r\n        let particles;\r\n        let radius = 20;\r\n              \r\n        function init() {\r\n            particles = [];\r\n            \r\n            for(let i = 0; i < 50; i++){\r\n              let x = Math.random() * innerWidth;\r\n              let y = Math.random() * innerHeight;\r\n              let color = randomColor();\r\n\r\n              if(i !== 0){\r\n                  for(let j = 0; j < particles.length; j++){\r\n                     if(getDistance(x, y,particles[j].x, particles[j].y) - radius * 2 < 0){\r\n                        x = Math.random() * innerWidth;\r\n                        y = Math.random() * innerHeight;\r\n                        j = j-1;                \r\n                     }\r\n                  }\r\n              }\r\n\r\n              particles.push(new Particle(x,y,radius,color));\r\n            }\r\n        }\r\n\r\n        // Animation Loop\r\n        function animate() {\r\n\r\n            requestAnimationFrame(animate)\r\n            c.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            if(canvas.style.display == 'block'){\r\n                \r\n                particles.forEach((particle)=>{\r\n                    particle.update(particles);\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        init()\r\n        animate()\r\n    }\r\n}\r\nsample2();\r\n","function randomIntFromRange(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nfunction randomColor(colors) {\r\n  return colors[Math.floor(Math.random() * colors.length)]\r\n}\r\n\r\nfunction distance(x1, y1, x2, y2) {\r\n  const xDist = x2 - x1\r\n  const yDist = y2 - y1\r\n\r\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\r\n}\r\n\r\nmodule.exports = { randomIntFromRange, randomColor, distance }\r\n"],"sourceRoot":""}